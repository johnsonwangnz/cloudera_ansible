/* {{ ansible_managed }} */

globals {
  daemonize = yes
  setuid = yes
  user = ganglia
  debug_level = 0
  max_udp_msg_len = 1472
  mute = no
  deaf = no
  host_dmax = 86400 /* secs - expires (removes from web interface) hosts in 1 day */
  cleanup_threshold = 300 /* secs */
  gexec = no
  send_metadata_interval = 60 /* secs */
}

/* If a cluster attribute is specified, then all gmond hosts are wrapped inside
 * of a <CLUSTER> tag.  If you do not specify a cluster tag, then all <HOSTS> will
 * NOT be wrapped inside of a <CLUSTER> tag. */
cluster {
  name = "{{ ganglia_cluster|default('Hadoop') }}"
  owner = "{{ site_name|capitalize }}"
}

/* The host section describes attributes of the host, like the location */
host {
  location = "Unknown"
}

/* Feel free to specify as many udp_send_channels as you like.  Gmond
   used to only support having a single channel */

/* All nodes must have a udp_send_channel section. This tells gmond where to send the data it has collected about the
   local node (even if that is to itself). You can configure this to broadcast the information or send it to a particular
   host and port. If you specify a particular host, you probably want all nodes to send data to the same place. You can
   also have each node send the same information to more than one place for redundancy. */

udp_send_channel {
  host = {{ hostvars[groups["gmreceiver"][0]].ipv4_address|default(hostvars[groups["gmreceiver"][0]].ansible_default_ipv4.address) }}
  port = {{ ganglia_udp_send|default('8649') }}
  ttl = 1
}



{% if ansible_fqdn == groups["gmreceiver"][0] %}
/* At least one node must have a udp_recv_channel section. Data received by this section forms a snapshot of the state
   of all nodes. You can configure this to receive the data via broadcast or receive it on a particular IP interface and
   port. More than one node could be receiving the same data. You can use the 'deaf' keyword in the 'globals' section
   to disable this section, even if it is defined. */
/* You can specify as many udp_recv_channels as you like as well. */
udp_recv_channel {
  port = {{ ganglia_udp_recv|default('8649') }}
}
{% endif %}

{% if ansible_fqdn == groups["gmreceiver"][0] %}
/* For Ganglia to really be useful, at least one node which has udp_recv_channel defined must have a tcp_accept_channel
  section also. This section describes a particular IP interface and port where a query can be sent. Gmond will return
  an XML string of the summary information it has collected. This interface is the one gmetad will talk to. */
/* You can specify as many tcp_accept_channels as you like to share an xml description of the state of the cluster */
tcp_accept_channel {
  port = {{ ganglia_tcp_accept|default('8649') }}
}
{% endif %}



